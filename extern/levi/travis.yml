language: cpp

dist: xenial
sudo: required
osx_image: xcode9.4
cache: ccache

# Travis CI VM OSs -> 2 OSs
os:
  - linux
  - osx

# Travis CI build matrix components -> 2 compilers
compiler:
  - gcc
  - clang

# Travis CI environmental variables -> 2 env variables
env:
  - TRAVIS_BUILD_TYPE=Debug
  - TRAVIS_BUILD_TYPE=Release

# Total builds: 8 = 2 [OSs] * 2 [comps] * 2 [env vars]

# You can install packages and sources for Linux using the APT addon, without
# running `apt-get` commands in your `before_install` script. You can also
# install macOS packages that are not included in the default OS X environment
# using Homebrew addon.
# See: https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-with-the-apt-addon
# See: https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-on-os-x
addons:
  homebrew:
    packages:
      - ccache
      - eigen

  apt:
    packages:
      - libeigen3-dev

before_install:
  # Configure ccache and use it also under Linux with clang and clang++
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then export PATH="/usr/lib/ccache/bin/:$PATH"; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then if [ "$CC" == "clang" ]; then sudo ln -s ../../bin/ccache /usr/lib/ccache/clang; fi; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then if [ "$CC" == "clang" ]; then export CFLAGS="-Qunused-arguments"; fi; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then if [ "$CXX" == "clang++" ]; then sudo ln -s ../../bin/ccache /usr/lib/ccache/clang++; fi; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then if [ "$CXX" == "clang++" ]; then export CXXFLAGS="-Qunused-arguments"; fi; fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then export PATH="/usr/local/opt/ccache/libexec:$PATH"; fi

  # Print some more system information after installing all build tools
  - echo "-------------------- BEGIN SYSTEM INFORMATION --------------------"
  - uname -a
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then lsb_release -a;                     fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ];   then system_profiler SPSoftwareDataType; fi
  - env
  - which cmake
  - cmake --version
  - which $CC
  - $CC --version
  - which $CXX
  - $CXX --version
  - which ccache
  - ccache --version
  - ccache -s
  - echo "--------------------  END SYSTEM INFORMATION  --------------------"

before_script:
  - echo "-------------------- BEGIN cppfs INSTALLATION --------------------"
  - git clone https://github.com/cginternals/cppfs.git
  - cd cppfs
  - md build
  - cd build
  - cmake ..
  - make install
  - echo "-------------------- BEGIN levi INSTALLATION --------------------"
  # Run CMake
  - mkdir build
  - cd build
  - cmake -DBUILD_TESTING:BOOL=ON -DCMAKE_BUILD_TYPE=${TRAVIS_BUILD_TYPE} ..

script:
  - make
  - make test
  - ctest
